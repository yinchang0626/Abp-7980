//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using EF Core template.
// 4.0.0
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Data;
using System.Linq;
using System.Linq.Expressions;
using System.ComponentModel;
using System.Reflection;
using System.Data.Common;
using System.Collections.Generic;
using System.Threading.Tasks;
using Microsoft.EntityFrameworkCore;
using Volo.Abp.Data;
using Volo.Abp.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Internal;
using Microsoft.EntityFrameworkCore.Metadata;
using YC.Users;
using Volo.Abp.Identity;
using Volo.Abp.EntityFrameworkCore.Modeling;
using Volo.Abp.Users.EntityFrameworkCore;

namespace YC.EntityFrameworkCore
{
    [ConnectionStringName("Default")]
    public partial class YCDbContext : AbpDbContext<YCDbContext>, IYCDbContext
    {
        public DbSet<AppUser> Users { get; set; }
        public virtual DbSet<YC.Students.Student> Students
        {
            get;
            set;
        }

        public virtual DbSet<YC.Students.Group> Groups
        {
            get;
            set;
        }
        public YCDbContext(DbContextOptions<YCDbContext> options) :
            base(options)
        {
            OnCreated();
        }
        protected override void OnModelCreating(ModelBuilder builder)
        {
            builder.Entity<AppUser>(b =>
            {
                b.ToTable(AbpIdentityDbProperties.DbTablePrefix + "Users"); //Sharing the same table "AbpUsers" with the IdentityUser

                b.ConfigureByConvention();
                b.ConfigureAbpUser();

                /* Configure mappings for your additional properties
                 * Also see the YCEfCoreEntityExtensionMappings class
                 */
            });
            builder.ConfigureYC();

            CustomizeMapping(ref builder);

            base.OnModelCreating(builder);
        }

        partial void CustomizeMapping(ref ModelBuilder modelBuilder);

        partial void OnCreated();
    }
}
